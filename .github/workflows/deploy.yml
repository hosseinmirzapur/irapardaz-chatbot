name: Deploy Next.js App with Docker

on:
   push:
      branches:
         - main

jobs:
   deploy:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout code
           uses: actions/checkout@v2

         - name: Set up Docker Buildx
           uses: docker/setup-buildx-action@v1

         - name: Log in to Docker Hub
           uses: docker/login-action@v1
           with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}

         - name: Build Docker image
           run: |
              docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:latest \
                -t ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:${{ github.sha }} \
                --build-arg CACHEBUST=${{ github.run_id }} .

         - name: Push Docker image to Docker Hub
           run: |
              docker push ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:${{ github.sha }}

         - name: SSH to server and run Docker container
           env:
              SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
              SERVER_IP: ${{ secrets.SERVER_IP }}
              USERNAME: ${{ secrets.USERNAME }}
           run: |
              echo "$SSH_PRIVATE_KEY" | tr -d '\r' > private_key
              chmod 600 private_key
              ssh -o StrictHostKeyChecking=no -i private_key $USERNAME@$SERVER_IP << 'EOF'
                # Pull the latest image from Docker Hub
                docker pull ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:${{ github.sha }}
                
                # Stop and remove any existing container (if running)
                docker stop irapardaz-chatbots || true && docker rm irapardaz-chatbots || true
                
                # Run the new container
                docker run --network bridge -d --name irapardaz-chatbots -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/irapardaz-chatbots:${{ github.sha }}
              EOF

              # Clean up the temporary key file
              rm -f private_key
